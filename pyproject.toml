#### black ####################################################################
[tool.black]
extend-exclude = '^/src/app/db/migrations/versions/.*\.py$'
line-length = 80
skip-magic-trailing-comma = true
target-version = ["py310"]

#### coverage #################################################################
[tool.coverage]

[tool.coverage.run]
branch = true
data_file = ".coverage/data"
source = ["app"]
parallel = true

[tool.coverage.report]
fail_under = 100.0
skip_covered = true
skip_empty = true

[tool.coverage.html]
directory = ".coverage/html"

#### isort ####################################################################
[tool.isort]
atomic = true
case_sensitive = true
float_to_top = true
force_single_line = true
line_length = 80
lines_after_imports = 2
profile = "black"
remove_redundant_aliases = true
skip_glob = ["src/app/db/migrations/*.py"]

#### poetry ###################################################################
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "tutorial-complete-fastapi"
version = "0.1.0"
description = "Complete FastAPI masterclass + Instagram clone project"
authors = ["Derek Wan <d.wan@icloud.com>"]

[tool.poetry.dependencies]
python = "^3.10"
bcrypt = "^3.2.2"
dycw-utilities = "^0.1.26"
fastapi = "0.78.0"
gunicorn = "^20.0.4"
passlib = "^1.7.4"
pydantic = { version = "^1.9.1", extras = ["email"] }
sqlalchemy = "^1.4.36"
strenum = "^0.4.7"
uvicorn = { version = "^0.17.6", extras = ["standard"] }

[tool.poetry.dev-dependencies]
autoflake = "^1.4"
black = "^22.3.0"
coverage = { version = "^6.3.3", extras = ["toml"] }
flake8-absolute-import = "^1.0.0.1"
flake8-annotations = "^2.9.0"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^22.4.25"
flake8-comprehensions = "^3.10.0"
flake8-debugger = "^4.0.0"
flake8-eradicate = "^1.2.1"
flake8-no-pep420 = "^2.3.0"
flake8-pie = "^0.15.0"
flake8-print = "^5.0.0"
flake8-simplify = "^0.19.2"
flake8-unused-arguments = "^0.0.10"
hypothesis = "^6.46.7"
hypothesis-faker = "^0.1.13"
isort = "^5.10.1"
poetry-deps-scanner = "^1.0.1"
pre-commit = "^2.18.1"
pyclean = "^2.2.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
requests = "^2.23.0"
sqlalchemy2-stubs = "^0.0.2-alpha.22"
typeguard = "^2.13.3"

#### pyright ##################################################################
[tool.pyright]
include = ["src"]
exclude = ["src/app/db/migrations"]
venvPath = ".direnv"
executionEnvironments = [{ root = "src" }]
typeCheckingMode = "strict"
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportUnknownParameterType = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownMemberType = false
reportUntypedBaseClass = false
reportImplicitStringConcatenation = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

#### pytest ###################################################################
[tool.pytest.ini_options]
addopts = [
  "-rsxX",
  "--color=auto",
  "--strict-markers",
  "--typeguard-packages=app"
]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
]
minversion = "7.0"
testpaths = ["src/tests"]
xfail_strict = true
